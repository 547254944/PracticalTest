@using PracticalTest.Models

@model PracticalTest.Models.Stu

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Registration</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>New Student</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.NRIC, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NRIC, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NRIC, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" >Name</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.StudentName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StudentName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model=>model.Gender,new SelectList(Enum.GetValues(typeof(Gender))),"--Select Gender--")               
                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Birthday, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Birthday, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Birthday, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AvailableDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AvailableDate, new { htmlAttributes = new { @class = "form-control" } })             
            </div>
        </div>

        
           
            <div class="form-group">
                @Html.LabelFor(model => model.English, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-2">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.English)
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Math, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-2">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.Math)
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Science, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-2">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.Science)
                    </div>
                </div>
            </div>
       
        <br />
        <div class="form-group" style="float:right;">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Submit" class="btn btn-default" />
            </div>
        </div>
    </div>

}
<br />
<br />
<div class="panel-footer">
    @Html.ActionLink("Back to List", "Index")
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
